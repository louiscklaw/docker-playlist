version: "3"

## https://documentation.portainer.io/v2.0/deploy/ceinstalldocker/
services:
  drone:
    image: drone/drone:1
    restart: unless-stopped
    container_name: drone
    user: ${XID:-1000}
    # labels:
    #   - traefik.enable=true
    #   - traefik.docker.network=drone-net
    #   - traefik.http.services.drone-svc.loadbalancer.server.port=80
    #   - traefik.http.routers.drone-rtr.rule=Host(`drone.${DNS_DOMAIN}`)
    #   - traefik.http.routers.drone-rtr.entrypoints=websecure
    #   - traefik.http.routers.drone-rtr.tls=true
    environment:
      - DRONE_SERVER_HOST=drone.iamon99.com
      - DRONE_SERVER_PROTO=https
      - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID}
      - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_USER_CREATE=${DRONE_USER_CREATE}
      - DRONE_USER_FILTER=${DRONE_USER_FILTER}
    volumes:
      - ./volumes/drone/server/data:/data

  drone-runner:
    image: drone/drone-runner-docker:1
    restart: unless-stopped
    container_name: drone_runner_1
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=drone-runner-1
    labels:
      - traefik.enable=false
    volumes:
      - ${SOCK_PATH:-/var/run/docker.sock}:/var/run/docker.sock
