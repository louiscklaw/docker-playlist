version: "3.8"

services:
  restaurant_cms:
    #   # container_name: restaurant_cms
    #   build:
    #     context: ./restaurant_cms
    #   volumes:
    #     - ./restaurant_cms:/my-app
    #   command: /my-app/entry.sh
    image: logickee/restaurant-cms-tryout
    ports:
      - 3004:3000
    restart: unless-stopped

  admin_cms:
    # container_name: admin_cms
    # build:
    #   context: ./admin_cms
    # volumes:
    #   - ./admin_cms:/my-app
    image: logickee/admin-cms-tryout
    ports:
      - 3005:3000
    restart: unless-stopped

  nextjs_helloworld:
    # container_name: admin_cms
    # build:
    #   context: ./admin_cms
    # volumes:
    #   - ./admin_cms:/my-app
    image: logickee/nextjs-helloworld-tryout
    ports:
      - 3007:3000
    restart: unless-stopped

  gatsby_helloworld:
    # container_name: admin_cms
    # build:
    #   context: ./admin_cms
    # volumes:
    #   - ./admin_cms:/my-app
    image: logickee/gatsby-helloworld-tryout
    ports:
      - 3008:9000
    restart: unless-stopped

  wiki:
    # build:
    #   context: ./wiki
    image: logickee/wiki-app-tryout
    ports:
      - 3006:3000
    restart: unless-stopped

  whoami:
    image: "traefik/whoami"
    # container_name: "whoami_root"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami_root.rule=Host(`whoami_react_test.iamon99.com`)"
      - "traefik.http.routers.whoami_root.entrypoints=websecure"
      - "traefik.http.routers.whoami_root.tls.certresolver=myresolver"

  chrome:
    image: selenium/node-chrome:latest
    shm_size: &shm-size 2G
    depends_on:
      - selenium-hub
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_INSTANCES=3
      - SE_NODE_MAX_SESSIONS=3
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_SCREEN_WIDTH=1920
      - SE_SCREEN_HEIGHT=1080

  selenium-hub:
    image: selenium/hub:latest
    ports:
      - "6442:4442"
      - "6443:4443"
      - "6444:4444"

  # redis:
  #   image: redis:6.0.7
  #   container_name: redis
  #   hostname: redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ./volumes/redis/conf:/etc/redis
  #     - ./volumes/redis/data:/data
  #   command: redis-server /etc/redis/redis.conf
  #   restart: always

  # redisinsight:
  #   image: redislabs/redisinsight:latest
  #   container_name: redisinsight
  #   hostname: redisinsight
  #   ports:
  #     - "8001:8001"
  #   volumes:
  #     - ./volumes/redisinsight:/db
  #   restart: always

  strapi:
    image: strapi/strapi
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: strapi
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
    links:
      - postgres:postgres
    volumes:
      - ./volume/strapi/app:/srv/app
    ports:
      - "1337:1337"
    depends_on:
      - postgres

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    volumes:
      - ./volume/postgres/data:/var/lib/postgresql/data
    ports:
      - "6432:5432"

  pgweb:
    # container_name: pgweb
    restart: always
    image: sosedoff/pgweb
    ports:
      - "6084:8081"
    links:
      - postgres:postgres
    environment:
      - DATABASE_URL=postgres://strapi:strapi@postgres:5432/strapi?sslmode=disable
    depends_on:
      - postgres

networks:
  default:
    external:
      name: traefik-proxy-network
